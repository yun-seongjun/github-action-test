name: Staging -> Main, Dev

on:
  workflow_dispatch: {}

permissions:
  pull-requests: write
  contents: write

jobs:
  create-PR-staging-to-main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout staging
        uses: actions/checkout@v4
        with:
          ref: staging
          fetch-depth: 0

      - name: Setup Node (for reading package.json)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Read version from package.json
        id: ver
        run: |
          set -euo pipefail
          if [ ! -f package.json ]; then
            echo "root package.json not found"; exit 1
          fi
          V=$(node -p "require('./package.json').version")
          echo "version=$V"
          echo "version=$V" >> "$GITHUB_OUTPUT"

      - name: Check Differences Between Staging and Main
        run: |
          git fetch origin main staging
          if git diff --quiet origin/main origin/staging; then
            echo "should_skip_main=true" >> $GITHUB_ENV
          else
            echo "should_skip_main=false" >> $GITHUB_ENV
          fi

      - name: Create Pull Request
        if: env.should_skip_main == 'false'
        run: |
          gh pr create \
            --repo "${{ github.repository }}" \
            --title "ðŸš€ Release ${{ steps.ver.outputs.version }}" \
            --body  "Release ${{ steps.ver.outputs.version }}" \
            --assignee "${{ github.actor }}" \
            --base main --head staging
        env:
          GH_TOKEN: ${{ github.token }}

  create-PR-staging-to-dev:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout staging
        uses: actions/checkout@v4
        with:
          ref: staging
          fetch-depth: 0

      - name: Setup Node (for reading package.json)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Read version from package.json
        id: ver
        run: |
          set -euo pipefail
          if [ ! -f package.json ]; then
            echo "root package.json not found"; exit 1
          fi
          V=$(node -p "require('./package.json').version")
          echo "version=$V"
          echo "version=$V" >> "$GITHUB_OUTPUT"

      - name: Check Differences Between Staging and Dev
        run: |
          git fetch origin dev staging
          if git diff --quiet origin/dev origin/staging; then
            echo "should_skip=true" >> $GITHUB_ENV
          else
            echo "should_skip=false" >> $GITHUB_ENV
          fi

      - name: Create Pull Request
        if: env.should_skip == 'false'
        run: |
          gh pr create \
            --repo "${{ github.repository }}" \
            --title "ðŸ”€ Staging -> Dev (${{ steps.ver.outputs.version }})" \
            --body  "Release ${{ steps.ver.outputs.version }}" \
            --assignee "${{ github.actor }}" \
            --base dev --head staging
        env:
          GH_TOKEN: ${{ github.token }}
